{"version":3,"sources":["components/Button.js","context/SettingsContext.js","components/CountdownAnimation.js","components/SetPomodoro.js","App.js","index.js"],"names":["Button","title","activeClass","_callback","className","onClick","SettingsContext","createContext","SettingsContextProvider","props","useState","pomodoro","setPomodoro","executing","setExecuting","startAnimate","setStartAnimate","updateExecute","updatedSettings","setTimerTime","evaluate","active","work","short","long","Provider","value","startTimer","pauseTimer","children","remainingTime","minutes","Math","floor","seconds","SettingsBtn","setCurrentTimer","active_state","stopAimate","CountdownAnimation","key","timer","animate","useContext","isPlaying","duration","colors","strokeWidth","size","trailColor","onComplete","SetPomodoro","newTimer","setNewTimer","handleChange","input","target","name","parseInt","noValidate","onSubmit","e","preventDefault","type","onChange","App","useEffect","undefined","render","document","getElementById"],"mappings":"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","file":"static/js/main.4f4c6d64.chunk.js","sourcesContent":["export const Button = ({ title, activeClass, _callback }) => {\n\treturn (\n\t\t<button className={activeClass} onClick={_callback}>\n\t\t\t{title}\n\t\t</button>\n\t)\n}\n","import { useState, createContext } from \"react\";\n\nexport const SettingsContext = createContext()\n\nfunction SettingsContextProvider(props) {\n\n    const [pomodoro, setPomodoro] = useState(0)\n    const [executing, setExecuting] = useState({})\n    const [startAnimate, setStartAnimate] = useState(false)\n\n    function setCurrentTimer (active_state) {\n        updateExecute({\n            ...executing,\n            active: active_state\n        })\n        setTimerTime(executing)\n    }\n\n    // start animation fn \n    function startTimer() {\n        setStartAnimate(true)\n    }\n    // pause animation fn \n    function pauseTimer() {\n    setStartAnimate(false)\n    }\n    // pass time to counter \n    const children = ({ remainingTime }) => {\n    const minutes = Math.floor(remainingTime / 60)\n    const seconds = remainingTime % 60\n    \n    return `${minutes}:${seconds}`\n    }\n\n    // clear session storage \n    const SettingsBtn = () => {\n        setExecuting({})\n        setPomodoro(0)\n    }\n\n    const updateExecute = updatedSettings => {\n        setExecuting(updatedSettings)\n        setTimerTime(updatedSettings)\n    }\n\n    const setTimerTime = (evaluate) => {\n        switch (evaluate.active) {\n            case 'work':\n                setPomodoro(evaluate.work)\n                break;\n            case 'short':\n                setPomodoro(evaluate.short)\n                break;\n            case 'long':\n                setPomodoro(evaluate.long)\n                break;\n                default:\n                    setPomodoro(0)\n                break;\n        }\n    }\n\n    function stopAimate() {\n        setStartAnimate(false)\n    }\n\n    return (\n        <SettingsContext.Provider value={{\n            pomodoro, \n            executing,\n            updateExecute, \n            startAnimate, \n            startTimer,\n            pauseTimer,\n            children,\n            SettingsBtn,\n            setCurrentTimer,\n            stopAimate\n        }}>\n            {props.children}\n        </SettingsContext.Provider>\n    )\n\n}\n\nexport default SettingsContextProvider","import { useContext } from 'react'\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer'\nimport { SettingsContext } from '../context/SettingsContext'\n\nexport const CountdownAnimation = ({ key, timer, animate, children }) => {\n\tconst { stopAimate } = useContext(SettingsContext)\n\n\treturn (\n\t\t<CountdownCircleTimer\n\t\t\tkey={key}\n\t\t\tisPlaying={animate}\n\t\t\tduration={timer * 60}\n\t\t\tcolors={[\n\t\t\t\t['#FE6F6B', 0.33],\n\t\t\t\t['#FE6F6B', 0.33],\n\t\t\t\t['#FE6F6B', 0.33],\n\t\t\t]}\n\t\t\tstrokeWidth={6}\n\t\t\tsize={220}\n\t\t\ttrailColor='#151932'\n\t\t\tonComplete={() => {\n\t\t\t\tstopAimate()\n\t\t\t}}>\n\t\t\t{children}\n\t\t</CountdownCircleTimer>\n\t)\n}\n","import React, { useContext, useState } from 'react'\nimport { SettingsContext } from '../context/SettingsContext'\n\nexport const SetPomodoro = () => {\n\tconst [newTimer, setNewTimer] = useState({\n\t\twork: 0.2,\n\t\tshort: 0.1,\n\t\tlong: 0.5,\n\t\tactive: 'work',\n\t})\n\n\tconst { updateExecute } = useContext(SettingsContext)\n\n\tconst handleChange = (input) => {\n\t\tconst { name, value } = input.target\n\t\tswitch (name) {\n\t\t\tcase 'work':\n\t\t\t\tsetNewTimer({\n\t\t\t\t\t...newTimer,\n\t\t\t\t\twork: parseInt(value),\n\t\t\t\t})\n\t\t\t\tbreak\n\n\t\t\tcase 'shortBreak':\n\t\t\t\tsetNewTimer({\n\t\t\t\t\t...newTimer,\n\t\t\t\t\tshort: parseInt(value),\n\t\t\t\t})\n\t\t\t\tbreak\n\n\t\t\tcase 'longBreak':\n\t\t\t\tsetNewTimer({\n\t\t\t\t\t...newTimer,\n\t\t\t\t\tlong: parseInt(value),\n\t\t\t\t})\n\t\t\t\tbreak\n\n\t\t\tdefault:\n\t\t\t\tbreak\n\t\t}\n\t}\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault()\n\t\tupdateExecute(newTimer)\n\t}\n\treturn (\n\t\t<div className='form-container'>\n\t\t\t<form noValidate onSubmit={handleSubmit}>\n\t\t\t\t<div className='input-wrapper'>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName='input'\n\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\tname='work'\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tvalue={newTimer.work}\n\t\t\t\t\t/>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName='input'\n\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\tname='shortBreak'\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tvalue={newTimer.short}\n\t\t\t\t\t/>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName='input'\n\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\tname='longBreak'\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tvalue={newTimer.long}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<button type='submit'>Set Timer</button>\n\t\t\t</form>\n\t\t</div>\n\t)\n}\n","import React, { useEffect, useContext } from 'react'\nimport { Button } from './components/Button'\nimport { CountdownAnimation } from './components/CountdownAnimation'\nimport { SetPomodoro } from './components/SetPomodoro'\nimport { SettingsContext } from './context/SettingsContext'\n\nexport const App = () => {\n\tconst {\n\t\tpomodoro,\n\t\texecuting,\n\t\tstartAnimate,\n\t\tchildren,\n\t\tstartTimer,\n\t\tpauseTimer,\n\t\tupdateExecute,\n\t\tsetCurrentTimer,\n\t\tSettingsBtn,\n\t} = useContext(SettingsContext)\n\n\tuseEffect(() => {\n\t\tupdateExecute(executing)\n\t}, [executing, startAnimate, updateExecute])\n\n\treturn (\n\t\t<div className='container'>\n\t\t\t<h1>Pomodoro</h1>\n\t\t\t<small>Be productive the right way.</small>\n\t\t\t{pomodoro !== 0 ? (\n\t\t\t\t<>\n\t\t\t\t\t<ul className='labels'>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ttitle='Work'\n\t\t\t\t\t\t\t\tactiveClass={\n\t\t\t\t\t\t\t\t\texecuting.active === 'work'\n\t\t\t\t\t\t\t\t\t\t? 'active-label'\n\t\t\t\t\t\t\t\t\t\t: undefined\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t_callback={() => setCurrentTimer('work')}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ttitle='Short Break'\n\t\t\t\t\t\t\t\tactiveClass={\n\t\t\t\t\t\t\t\t\texecuting.active === 'short'\n\t\t\t\t\t\t\t\t\t\t? 'active-label'\n\t\t\t\t\t\t\t\t\t\t: undefined\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t_callback={() => setCurrentTimer('short')}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ttitle='Long Break'\n\t\t\t\t\t\t\t\tactiveClass={\n\t\t\t\t\t\t\t\t\texecuting.active === 'long'\n\t\t\t\t\t\t\t\t\t\t? 'active-label'\n\t\t\t\t\t\t\t\t\t\t: undefined\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t_callback={() => setCurrentTimer('long')}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<Button title='Settings' _callback={SettingsBtn} />\n\t\t\t\t\t<div className='timer-container'>\n\t\t\t\t\t\t<div className='time-wrapper'>\n\t\t\t\t\t\t\t<CountdownAnimation\n\t\t\t\t\t\t\t\tkey={pomodoro}\n\t\t\t\t\t\t\t\ttimer={pomodoro}\n\t\t\t\t\t\t\t\tanimate={startAnimate}>\n\t\t\t\t\t\t\t\t{children}\n\t\t\t\t\t\t\t</CountdownAnimation>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='button-wrapper'>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttitle='Start'\n\t\t\t\t\t\t\tactiveClass={!startAnimate ? 'active' : undefined}\n\t\t\t\t\t\t\t_callback={startTimer}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttitle='Pause'\n\t\t\t\t\t\t\tactiveClass={startAnimate ? 'active' : undefined}\n\t\t\t\t\t\t\t_callback={pauseTimer}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<SetPomodoro />\n\t\t\t)}\n\t\t</div>\n\t)\n}\n","import React from 'react'\nimport { render } from 'react-dom'\nimport './index.css'\nimport { App } from './App'\nimport SettingsContextProvider from './context/SettingsContext'\n\nrender(\n\t<SettingsContextProvider>\n\t\t<App />\n\t</SettingsContextProvider>,\n\tdocument.getElementById('root'),\n)\n"],"sourceRoot":""}